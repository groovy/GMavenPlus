<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.codehaus.gmavenplus</groupId>
    <artifactId>gmavenplus-plugin-it-root</artifactId>
    <version>testing</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>gmavenplus-plugin-it-advancedExecute</artifactId>
  <version>testing</version>
  <name>GMavenPlus Plugin Execute Test</name>
  <description>The kitchen sink of script executions. Because this uses Grapes, it will fail for all versions of Groovy before 1.7-beta-1.</description>

  <properties>
    <projectProp>yetAnotherValue</projectProp>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <!-- this is only needed because the script uses it -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>indy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>@groovyVersion@</version>
                <classifier>indy</classifier>
              </dependency>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-ant</artifactId>
                <version>@groovyVersion@</version>
                <classifier>indy</classifier>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>nonindy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>@groovyVersion@</version>
              </dependency>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-ant</artifactId>
                <version>@groovyVersion@</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>pre2.3-indy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>@groovyVersion@</version>
                <classifier>indy</classifier>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>pre2.3-nonindy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>@groovyVersion@</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <properties>
            <property>
              <name>someProp</name>
              <value>someValue</value>
            </property>
            <property>
              <name>cliProp</name>
              <value>${cliProp}</value>
            </property>
          </properties>
          <scripts>
            <script>file:///${project.basedir}/src/main/resources/groovyScripts/helloWorld.groovy</script>
            <script>${project.basedir}/src/main/resources/groovyScripts/helloWorld2.groovy</script>
            <script><![CDATA[
              @Grapes([
                  @Grab(group='org.apache.commons', module='commons-lang3', version='${commonsLang3Version}')
              ])
              import org.apache.commons.lang3.SystemUtils
              log.debug("This session's goals are " + session.goals)
              assert session.goals.size() == 2
              log.debug("The settings are " + settings)
              assert settings != null
              log.debug("The session.settings are " + session.settings)
              assert session.settings == settings
              log.debug("The local repository is " + session.localRepository)
              assert session.localRepository != null
              log.debug("The reactor projects are " + session.sortedProjects)
              assert session.sortedProjects.size() > 0
              log.debug("The plugin artifacts are " + pluginArtifacts)
              assert pluginArtifacts.size() > 0
              log.debug("The mojo execution is " + mojoExecution)
              assert mojoExecution != null
              log.debug("The plugin descriptor is " + mojoExecution.mojoDescriptor)
              assert mojoExecution.mojoDescriptor != null
              log.debug("The Ant builder is " + ant)
              assert ant != null
              log.debug("The project helper is " + projectHelper)
              assert projectHelper != null
              log.debug("someProp is " + someProp)
              assert someProp == "someValue"
              log.debug("cliProp is " + cliProp)
              assert cliProp == "someOtherValue"
              log.debug("projectProp is " + project.properties['projectProp'])
              assert project.properties['projectProp'] == "yetAnotherValue"
              File targetDir = new File(project.build.directory)
              if (!targetDir.exists())
                  targetDir.mkdir()
              new File(targetDir, 'javaVersion.txt').append("Using Java ${SystemUtils.JAVA_VERSION}")

              log.debug("calling fail() without arguments")
              try {
                fail()
                assert false // fail should throw an exception
              } catch (Exception e) {
                assert e instanceof org.apache.maven.plugin.MojoExecutionException
              }
              log.debug("calling fail() with message")
              try {
                fail("Message")
                assert false // fail should throw an exception
              } catch (Exception e) {
                assert e instanceof org.apache.maven.plugin.MojoExecutionException
                assert e.getMessage() == "Message"
              }
              log.debug("calling fail() with message and cause")
              def cause = new IllegalStateException();
              try {
                fail("Message", cause)
                assert false // fail should throw an exception
              } catch (Exception e) {
                assert e instanceof org.apache.maven.plugin.MojoExecutionException
                assert e.getMessage() == "Message"
                assert e.getCause() == cause
              }
            ]]></script>
          </scripts>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
